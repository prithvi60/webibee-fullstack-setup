generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  name          String         @db.VarChar(100)
  email         String         @unique @db.VarChar(50)
  password      String?
  phone_number  String         @unique
  address       String?
  image         String?
  role          String?
  emailVerified DateTime?      @map("email_verified")
  phoneVerified DateTime?      @map("phone_verified")
  Account       Account[]
  Session       Session[]
  UploadedFile  UploadedFile[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  @@map("users")
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model UploadedFile {
  id        String   @id @default(cuid())
  filename  String
  fileUrl   String
  version   Int
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("uploaded_files")
}

model Otp {
  id        String   @id @default(cuid())
  email     String   @db.VarChar(50)
  otp       String // Numeric OTP
  expiresAt DateTime
  verified  Boolean  @default(false)
  createdAt DateTime @default(now())

  @@index([email])
  @@map("otps")
}

model Subscription {
  id        String   @id @default(cuid())
  email     String   @db.VarChar(50)
  expiresAt DateTime
  verified  Boolean  @default(false)
  createdAt DateTime @default(now())
}
